apiVersion: template.openshift.io/v1
kind: Template
labels:
  group: springboot-s2i
  template: springboot-s2i
metadata:
  annotations:
    description: springboot-s2i
    tags: quickstart
  creationTimestamp: 2018-07-26T02:05:46Z
  name: springboot-s2i
  namespace: openshift
  resourceVersion: "3350145"
  selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/springboot-s2i
  uid: 68e320de-9078-11e8-a0af-005056b72a0a
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      name: ${APPLICATION_NAME}-pipeline
    name: ${APPLICATION_NAME}-pipeline
  spec:
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node('maven') {
              stage 'build'
              openshiftBuild(buildConfig: '${APPLICATION_NAME}', showBuildLogs: 'true')
              stage 'deploy'
              openshiftDeploy(deploymentConfig: '${APPLICATION_NAME}')
          }
      type: JenkinsPipeline
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: ${PORT}
      targetPort: ${{PORT}}
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      git:
        ref: ${SOURCE_REF}
        uri: ${SOURCE_URL}
      type: Git
    strategy:
      sourceStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: springboot-maven3-centos:latest
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: ${APPLICATION_NAME}
      type: GitHub
    - generic:
        secret: ${APPLICATION_NAME}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: ${PORT}
            name: qy
            protocol: TCP
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStream
          name: ${APPLICATION_NAME}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: cmdb-access
- description: Git source URI for application
  name: SOURCE_URL
  required: true
  value: http://gogs-cicd.qyos.com/gogs/demo.git
- description: Git branch/tag reference
  name: SOURCE_REF
  value: develop
- description: Service port
  name: PORT
  value: "8080"
