apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: springboot-template-pv
metadata:
  annotations:
    description: springboot-template-pv
    tags: quickstart
  name: springboot-template-pv
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      name: ${APPLICATION_NAME}-pipeline
    name: ${APPLICATION_NAME}-pipeline
  spec:
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node('centos7') {
              stage 'build'
              sh "/docker/pushimage.sh ${IMAGE_NAME} ${DEV_NAMESPACE_NAME} ${PROD_NAMESPACE_NAME}"
              stage 'deploy'
              openshiftDeploy(deploymentConfig: '${APPLICATION_NAME}')
          }
      type: JenkinsPipeline
# - apiVersion: v1
#   kind: ImageStream
#   metadata:
#     labels:
#       application: ${APPLICATION_NAME}
#     name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: ${PORT}
      targetPort: ${{PORT}}
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PVC_SIZE}
    volumeName: ${PV_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${IMAGE_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: ${PORT}
            name: qy
            protocol: TCP
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStream
          name: ${IMAGE_NAME}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: springboot-test
- description: The name for the image.
  name: IMAGE_NAME
  required: true
  value: springboot-test
- description: The name for the dev env image namespace.
  name: DEV_NAMESPACE_NAME
  required: true
  value: cicd
- description: The name for the prod env image namespace.
  name: PROD_NAMESPACE_NAME
  required: true
  value: cicd 
- description: Service port
  name: PORT
  value: "8080"
- description: mount path
  name: MOUNT_PATH
  value: /mnt
- description: pvc size
  name: PVC_SIZE
  value: 1Gi
- description: pv name
  name: PV_NAME
  value: "null"